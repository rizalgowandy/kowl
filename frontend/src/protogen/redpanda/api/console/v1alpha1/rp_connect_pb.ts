// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/console/v1alpha1/rp_connect.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * GetConnectPipelineRequest is the request to retrieve a pipeline by name.
 *
 * @generated from message redpanda.api.console.v1alpha1.LintConfigRequest
 */
export class LintConfigRequest extends Message<LintConfigRequest> {
  /**
   * @generated from field: string yaml_config = 1;
   */
  yamlConfig = "";

  constructor(data?: PartialMessage<LintConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.LintConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "yaml_config", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LintConfigRequest {
    return new LintConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LintConfigRequest {
    return new LintConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LintConfigRequest {
    return new LintConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LintConfigRequest | PlainMessage<LintConfigRequest> | undefined, b: LintConfigRequest | PlainMessage<LintConfigRequest> | undefined): boolean {
    return proto3.util.equals(LintConfigRequest, a, b);
  }
}

/**
 * @generated from message redpanda.api.console.v1alpha1.LintConfigResponse
 */
export class LintConfigResponse extends Message<LintConfigResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.LintConfigResponse.Lint lints = 2;
   */
  lints: LintConfigResponse_Lint[] = [];

  constructor(data?: PartialMessage<LintConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.LintConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "lints", kind: "message", T: LintConfigResponse_Lint, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LintConfigResponse {
    return new LintConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LintConfigResponse {
    return new LintConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LintConfigResponse {
    return new LintConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LintConfigResponse | PlainMessage<LintConfigResponse> | undefined, b: LintConfigResponse | PlainMessage<LintConfigResponse> | undefined): boolean {
    return proto3.util.equals(LintConfigResponse, a, b);
  }
}

/**
 * @generated from message redpanda.api.console.v1alpha1.LintConfigResponse.Lint
 */
export class LintConfigResponse_Lint extends Message<LintConfigResponse_Lint> {
  /**
   * @generated from field: int32 line = 1;
   */
  line = 0;

  /**
   * @generated from field: int32 column = 2;
   */
  column = 0;

  /**
   * @generated from field: string reason = 3;
   */
  reason = "";

  constructor(data?: PartialMessage<LintConfigResponse_Lint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.LintConfigResponse.Lint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "line", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "column", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LintConfigResponse_Lint {
    return new LintConfigResponse_Lint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LintConfigResponse_Lint {
    return new LintConfigResponse_Lint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LintConfigResponse_Lint {
    return new LintConfigResponse_Lint().fromJsonString(jsonString, options);
  }

  static equals(a: LintConfigResponse_Lint | PlainMessage<LintConfigResponse_Lint> | undefined, b: LintConfigResponse_Lint | PlainMessage<LintConfigResponse_Lint> | undefined): boolean {
    return proto3.util.equals(LintConfigResponse_Lint, a, b);
  }
}

